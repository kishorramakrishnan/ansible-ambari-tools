---

- name: simple debug
  shell: ls /var/lib/ambari-server/resources/scripts
  become_user: root
  delegate_to: "{{ ambari_host }}"
  register: scripts

- name: simple deug step2
  debug:
    var: scripts.stdout

- name: read yml
  shell: 'cat /etc/unbound/conf.d/00-cluster.conf | grep \.local-data-ptr | sed "s/\"/ /g" | cut -d ":" -f2- | cut -d " " -f 4'
  register: local_hosts
  become: yes
  become_user: root

- name: get all_hosts
  set_fact:
    all_hosts: "{{ local_hosts.stdout_lines | list }}"

- name: get loadbalancer host name
  shell: "hostname -f"
  register: loadbalancer_host

- name : STOP KNOX
  debug :
    var: all_hosts
  notify:
    - stop knox
  changed_when: true

- name: install pexpect
  pip:
    name: pexpect
  become: yes
  become_user: root
  delegate_to: "{{ item }}"
  with_items: "{{ all_hosts }}"


- name: Fetch Topology files from KNox gateway host
  fetch:
    src: "/usr/hdp/current/knox-server/conf/topologies/{{ item }}"
    flat: yes
    dest: "/knox_temp/"
    remote_src: yes
  become: yes
  become_user: root
  run_once: true
  with_items:
    - admin.xml
    - knoxsso.xml
    - manager.xml
    - default.xml

- name: Fetch keystore files from Knox gateway host
  fetch:
    src: "/usr/hdp/current/knox-server/data/security/keystores/{{ item }}"
    flat: yes
    dest: "/knox_temp/"
  become: yes
  become_user: root
  run_once: true
  with_items:
    - admin-credentials.jceks
    - default-credentials.jceks
    - knoxsso-credentials.jceks
    - manager-credentials.jceks

- name: copy default.xml to sandbox.xml
  become: yes
  run_once: true
  become_user: root
  delegate_to: localhost
  shell: 'cp /knox_temp/default.xml /knox_temp/sandbox.xml; chmod 550 /knox_temp/sandbox.xml; chgrp hadoop /knox_temp/sandbox.xml'

- name: copy all topologies to all other knox_gateway hosts
  become: yes
  become_user: root
  copy:
    src: "/knox_temp/{{ item }}"
    dest: "/etc/knox/conf/topologies/"
    group: hadoop
  with_items:
    - admin.xml
    - knoxsso.xml
    - manager.xml
    - sandbox.xml

- name: copy all keystore files to all other knox_gateway hosts
  become: yes
  become_user: root
  copy:
    src: "/knox_temp/{{ item }}"
    dest: "/usr/hdp/current/knox-server/data/security/keystores/"
    group: hadoop
  with_items:
    - admin-credentials.jceks
    - default-credentials.jceks
    - knoxsso-credentials.jceks
    - manager-credentials.jceks



- name : START KNOX
  debug :
    var: all_hosts
  notify:
    - start knox
  changed_when: true