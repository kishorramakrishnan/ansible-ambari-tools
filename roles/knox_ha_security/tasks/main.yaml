---
- name: read all hosts
  set_fact:
    all_hosts : "{{ unbound_conf_file | get_all_hosts }}"

- name: install pexpect
  pip:
    name: pexpect
  become: yes
  become_user: root
  delegate_to: "{{ item }}"
  with_items: "{{ all_hosts }}"

- name : STOP KNOX
  debug :
    var: "{{ ansible_fqdn }}"
  notify:
    - stop knox
  changed_when: true

- name: Fetch Topology files from Knox gateway host
  fetch:
    src: "{{ knox_topology_src_dir }}/{{ item }}"
    flat: yes
    dest: "/knox_temp/"
    remote_src: yes
  become: yes
  become_user: root
  run_once: true
  with_items:
    - admin.xml
    - knoxsso.xml
    - manager.xml
    - default.xml

- name: Fetch keystore files from Knox gateway host
  fetch:
    src: "{{ knox_security_keystore_dir }}/{{ item }}"
    flat: yes
    dest: "/knox_temp/"
  become: yes
  become_user: root
  run_once: true
  with_items:
    - admin-credentials.jceks
    - default-credentials.jceks
    - knoxsso-credentials.jceks
    - manager-credentials.jceks

- name: copy default.xml to sandbox.xml
  become: yes
  run_once: true
  become_user: root
  delegate_to: localhost
  shell: 'cp /knox_temp/default.xml /knox_temp/sandbox.xml; chmod 550 /knox_temp/sandbox.xml; chgrp hadoop /knox_temp/sandbox.xml'

- name: copy all topologies to all other knox_gateway hosts
  become: yes
  become_user: root
  copy:
    src: "/knox_temp/{{ item }}"
    dest: "{{ knox_topology_dir }}"
    mode: 0550
    group: hadoop
  with_items:
    - admin.xml
    - knoxsso.xml
    - manager.xml
    - sandbox.xml

- name: copy all keystore files to all other knox_gateway hosts
  become: yes
  become_user: root
  copy:
    src: "/knox_temp/{{ item }}"
    dest: "{{ knox_security_keystore_dir }}/"
    mode: 0550
    group: hadoop
  with_items:
    - admin-credentials.jceks
    - default-credentials.jceks
    - knoxsso-credentials.jceks
    - manager-credentials.jceks

- name : START KNOX
  debug :
    var: "{{ ansible_fqdn }}"
  notify:
    - start knox
  changed_when: true