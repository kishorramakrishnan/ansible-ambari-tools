---
- name: get all_hosts
  set_fact:
    all_hosts: "{{ unbound_conf_file | get_all_hosts }}"

- name: install pexpect
  pip:
    name: pexpect
  become: yes
  become_user: root
  delegate_to: "{{ item }}"
  with_items: "{{ all_hosts }}"

- name: Fetch Spnego keytabs from all hosts
  fetch:
    src: /etc/security/keytabs/spnego.service.keytab
    flat: yes
    dest: "/tmp/{{ item }}.keytab"
  become: yes
  become_user: root
  delegate_to: "{{ item }}"
  with_items: "{{ all_hosts }}"

- name: Merge keytabs to one super keytab
  run_once: yes
  delegate_to: localhost
  expect:
    command: ktutil
    responses:
      ktutil:
        - "read_kt /tmp/{{ item }}.keytab"
        - "write_kt /etc/security/keytabs/oozie.ha.keytab"
        - "quit"
  with_items: "{{ all_hosts }}"

- name: copy super keytab to all hosts
  become: yes
  become_user: root
  copy:
    src: /etc/security/keytabs/oozie.ha.keytab
    dest: /etc/security/keytabs/oozie.ha.keytab
    owner: oozie
    mode: '0550'
    group: hadoop
  delegate_to: "{{ item }}"
  with_items: "{{ all_hosts }}"

- name: set all configs for OOZIE HA modfication
  set_fact:
    oozie_loadbalancer: "{{ ansible_fqdn }}"
    ambari_port: 8080
    ambari_protocol : http
    
- name: Check that the WE directory for oozie exists
  stat:
    path: "/etc/wire_encryption/oozie/"
  register: is_oozie_we
  become: yes
  become_user: root

- name: set all configs for oozie HA modification
  set_fact:
    oozie_protocol: https
    oozie_port: 11443
    oozie_loadbalancer: "{{ ansible_fqdn }}"
    ambari_port: 8080
    ambari_protocol : http
  when: is_oozie_we.stat.exists == true
  delegate_to: localhost

- name: set Oozie url as loadbalancer url
  set_fact:
    oozie_url: "{{ oozie_protocol }}://{{ oozie_loadbalancer }}:{{ oozie_port }}/oozie"

- name: Invoke Ambari config role, to save configs for Oozie
  include_role:
    name: ambari_configure_service
  vars:
    ambari_component_section_name: "{{ oozie_ha_config_type }}"
    ambari_component_props: "{{ oozie_ha_config_props }}"